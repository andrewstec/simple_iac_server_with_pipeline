# This is a basic workflow to raise and destroy infrastructure and configure a Kubernetes cluster pool for
# a Nginx Docker image with TLS/SSL configured.

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      ## Docs: https://kubernetes.io/docs/tasks/tools/install-kubectl/
      - name: Install Kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl
          kubectl version --client

      # Drop and Deployment of Infrastructure
      - name: Drop and Deployment of Infrastructure
        run: |
          ./drop-infrastructure.sh
          ./deploy-infrastructure.sh
        env:
          DIGITAL_OCEAN_API_KEY: ${{ secrets.DIGITAL_OCEAN_API_KEY }}

      # Retrieve Kubernetes Client ID and fetch kubeconfig
      # Needed to push image to Kubernetes pool later
      - name: Configure Kubectl
        run: ./config-kubectl.sh
        env:
          DIGITAL_OCEAN_API_KEY: ${{ secrets.DIGITAL_OCEAN_API_KEY }}

      # Builds Docker image
      - name: Build Docker image
        run: docker build . -t nginx-hello-world

      - name: Login to Docker hub
        run: docker login -u {{ secrets.DOCKER_USER }} -p {{ secrets.DOCKER_PASSWORD}}